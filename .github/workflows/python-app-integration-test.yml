# Copyright (c) 2023 Robert Bosch GmbH
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: Run integration tests

on:
  workflow_call:
    inputs:
      appName:
        required: true
        type: string

jobs:
  run-integration-tests:
    name: Run Integration Tests (${{ inputs.appName }})
    runs-on: ubuntu-22.04
    container: ghcr.io/eclipse-velocitas/devcontainer-base-images/python:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: de-vri-es/setup-git-credentials@v2
        with:
          credentials: https://user:${{ secrets.GITHUB_TOKEN }}@github.com/

      - name: Init velocitas project
        run: |
          velocitas init

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install required packages
        run: |
          pip install -r ./app/requirements.txt
          pip install -r ./app/requirements-links.txt
          pip install -r ./app/tests/requirements-tests.txt

      - name: Configure K3D cluster
        run: velocitas exec runtime-k3d configure_controlplane

      - name: Install runtime containers in K3D cluster
        run: velocitas exec runtime-k3d deploy_runtime

      - id: github-repository-name-case-adjusted
        name: Prepare repository name in lower case for docker upload. This supports repository names in mixed case
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ github.repository }}

      - name: Checkout Github Integration
        uses: actions/checkout@v3
        with:
          repository: eclipse-velocitas/devenv-github-workflows
          path: ./.github/devenv-github-workflows

      - name: Download stored image from artifacts
        uses: actions/download-artifact@v3
        env:
          VAPP_IMAGE: ${{ inputs.appName }}-amd64
        with:
          name: ${{ env.VAPP_IMAGE }}
          path: ./.github/devenv-github-workflows/scripts

      - name: Deploy images
        working-directory: ./.github/devenv-github-workflows/scripts
        run: ./deploy_image_from_artifact.sh

      - name: Run Python integration tests
        shell: bash
        env:
          VDB_PORT: 30555
          MQTT_PORT: 31883
        run: |
          pip install -r app/tests/requirements-tests.txt
          pytest ./app/tests/integration --override-ini junit_family=xunit1 --junit-xml=./results/IntTest/junit.xml

      - name: Publish integration test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: ./results/IntTest/junit.xml

      - name: Clone release documentation action repository
        uses: actions/checkout@v3
        with:
          repository: eclipse-velocitas/release-documentation-action
          path: "./.github/actions"

      - name: Package integration test result files
        uses: ./.github/actions/package
        with:
          name: "IntegrationTest"
          type: "UnitTest"
          schema: "JUnit"
          sourcePath: ./results/IntTest/junit.xml
          packagePath: ./results/Documentation/renderer

      - name: Upload integration test results as artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: "test-results"
          path: |
            results/Documentation/renderer/*
